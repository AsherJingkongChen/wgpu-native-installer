name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - "*"
  pull_request:

permissions:
  contents: read

jobs:
  build-and-test:
    strategy:
      matrix:
        include:
          # - python: "3.10"
          #   runner: macos-13
          - python: "3.12"
            runner: "macos-14"
          - python: "3.10"
            runner: "macos-14"
          - python: "3.8"
            runner: "macos-14"
          # - python: "3.10"
          #   runner: "ubuntu-22.04"
          # - python: "3.10"
          #   runner: "windows-2022"
    env:
      PROJECT_ID: wgpu_native_installer
    runs-on: ${{ matrix.runner }}
    steps:
      - id: "platform-info"
        run: "echo '${{ matrix.runner }} is running on ${{ runner.os }}-${{ runner.arch }}'"

      - id: "checkout"
        uses: actions/checkout@v4

      - id: "setup-python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"

      - id: "install-dependencies"
        run: python -m pip install \
          --disable-pip-version-check \
          --no-build-isolation \
          --requirement requirements.tool.txt \
          --upgrade

      - id: "organize-codes"
        run: |
          python -m isort .
          python -m black .

      - id: "build-wheels"
        run: python -m pip wheel --no-build-isolation --wheel-dir dist .

      - id: "install-wheels"
        run: python -m pip install dist/*

      - id: "unit-tests"
        run: |
          python -m pytest

      - id: "integration-tests"
        run: |
          python -m ${{ env.PROJECT_ID }} -V
          python -m ${{ env.PROJECT_ID }} -vvgl d s -d ${{ runner.temp }}

      - id: "upload-artifact"
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.runner }}-${{ matrix.python }}
          path: dist/${{ env.PROJECT_ID }}-*.*.*-*.whl
          compression-level: 1

  release-github:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-and-test]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          token: ${{ secrets.GITHUB_TOKEN }}

  release-pypi:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-and-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist
          repository-url: https://upload.pypi.org/legacy/
